@*@model IEnumerable<v2kp.Models.DaiHoi>*@
@model PagedList.IPagedList<v2kp.Models.DaiHoi>
@using PagedList.Mvc

<h2 class="mb-4">Danh sách đại hội</h2>

<div class="d-flex justify-content-between align-items-center mb-3">
    @if (Session["Role"] != null && Session["Role"].ToString() == "Admin")
    {
        @Html.ActionLink("Thêm mới đại hội", "Create", new { id = ViewBag.IDKhuVuc }, new { @class = "btn btn-primary" })
    }

    <!-- Form tìm kiếm -->
    <div class="d-flex align-items-center w-100" style="max-width: 300px;">
        @using (Html.BeginForm("Index", "DaiHois", FormMethod.Get))
        {
            <!-- Đặt cho input và button đều có class bootstrap d-flex để chúng nằm trên một hàng -->
            <div class="d-flex w-100">
                <div class="form-group mb-0 me-2 w-100">
                    <input type="text" name="searchTerm" class="form-control" placeholder="Tìm kiếm theo tên đại hội..." value="@ViewBag.SearchTerm" />
                </div>
                <div class="form-group mb-0" style="width:150px">
                    <button type="submit" class="btn btn-primary">Tìm kiếm</button>
                </div>
            </div>
        }
    </div>
</div>




@if (!Model.Any())
{
    <p>Không có đại hội nào cho khu vực này.</p>
}
else
{
    <table class="table table-bordered">
        <thead class="table-light">
            <tr>
                <th>STT</th>
                <th>Tên đại hội</th>
                <th>Khu vực</th>
                <th>Thời gian bầu cử</th>
                <th>Thời gian kết thúc</th>

                <th>Trạng thái</th>
                <th>Chức năng</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.ID)</td>
                    <td>@Html.DisplayFor(modelItem => item.TenDaiHoi)</td>
                    <td>@Html.DisplayFor(modelItem => item.KhuVuc.KhuVuc1)</td>
                    <td>@(item.ThoiGian?.ToString("dd/MM/yyyy") ?? "Không có thời gian")</td>
                    <td>@(item.ThoiGianKetThuc?.ToString("dd/MM/yyyy") ?? "Không có thời gian")</td>
                    <td>
                        @if (item.TrangThai == true)
                        {
                            <span class="badge bg-success">Đang diễn ra</span>
                        }
                        else if (item.TrangThai == false)
                        {
                            <span class="badge bg-danger">Đã kết thúc</span>
                        }
                        @*else
                        {
                            <span class="badge bg-secondary">Chưa bắt đầu</span>
                        }*@
                    </td>


                    <td>
                        <a href="@Url.Action("Index", "Home", new { iddaihoi = item.ID, idkhuvuc = item.IDKhuVuc })" class="text-primary me-3">
                            <i class="fas fa-eye"></i> Xem chi tiết
                        </a>
                        @if (Session["Role"] != null && Session["Role"].ToString() == "Admin")
                        {
                            <a href="@Url.Action("Edit", "DaiHois", new { iddaihoi = item.ID, idkhuvuc = item.IDKhuVuc })" class="text-warning me-3">
                                <i class="fas fa-pencil-alt"></i> Sửa
                            </a>
                            <a href="@Url.Action("Delete", "DaiHois", new { iddaihoi = item.ID, idkhuvuc = item.IDKhuVuc })" class="text-danger" onclick="return confirm('Bạn có chắc chắn muốn xóa không?');">
                                <i class="fas fa-trash-alt"></i> Xóa
                            </a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}




<div class="d-flex justify-content-between  ">
    <div>
        <nav aria-label="Page navigation example">
            <ul class="pagination pagination-sm justify-content-center">
                <!-- Nút Previous (Trước) -->
                <li class="page-item @((Model.HasPreviousPage) ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">Previous</a>
                </li>

                <!-- Các số trang -->
                @if (Model.PageCount <= 5)
                {
                    <!-- Nếu tổng số trang ít hơn hoặc bằng 5, hiển thị tất cả -->
                    for (int i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @((i == Model.PageNumber) ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = i, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">@i</a>
                        </li>
                    }
                }
                else
                {
                    <!-- Nếu số trang nhiều hơn 5, hiển thị các trang đầu, trang cuối và dấu ba chấm -->
                    if (Model.PageNumber <= 3)
                    {
                        for (int i = 1; i <= 3; i++)
                        {
                            <li class="page-item @((i == Model.PageNumber) ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">@i</a>
                            </li>
                        }
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">@Model.PageCount</a>
                        </li>
                    }
                    else if (Model.PageNumber >= Model.PageCount - 2)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = 1, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">1</a>
                        </li>
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                        for (int i = Model.PageCount - 2; i <= Model.PageCount; i++)
                        {
                            <li class="page-item @((i == Model.PageNumber) ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">@i</a>
                            </li>
                        }
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = 1, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">1</a>
                        </li>
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                        for (int i = Model.PageNumber - 2; i <= Model.PageNumber + 2; i++)
                        {
                            <li class="page-item @((i == Model.PageNumber) ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">@i</a>
                            </li>
                        }
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">@Model.PageCount</a>
                        </li>
                    }
                }

                <!-- Nút Next (Sau) -->
                <li class="page-item @((Model.HasNextPage) ? "" : "disabled")">
                    <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">Next</a>
                </li>
            </ul>
        </nav>
    </div>









</div>
<!-- Bootstrap Icons CDN -->
@*<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">*@

<style>
    /* Đảm bảo dấu ba chấm có cùng kích thước và kiểu dáng với các số trang */
    .page-dots {
        font-size: 1rem; /* Giữ kích thước giống như các số trang */
        font-weight: 400; /* Đảm bảo độ dày chữ tương tự */
        line-height: 1.5; /* Đảm bảo line-height phù hợp */
        padding: 0.375rem 0.75rem; /* Padding giống như các nút trang */
        display: inline-block; /* Giữ hiển thị giống như nút trang */
        background-color: #fff; /* Màu nền trắng giống nút trang */
        border: 1px solid #dee2e6; /* Biên giới như các nút trang */
        border-radius: 0.25rem; /* Viền tròn như các nút trang */
        color: #007bff; /* Màu chữ giống các nút trang */
    }

        .page-dots:hover {
            text-decoration: none; /* Không có gạch dưới khi hover */
            background-color: #f8f9fa; /* Nền sáng hơn khi hover */
            color: #0056b3; /* Màu chữ đậm hơn khi hover */
        }
</style>

