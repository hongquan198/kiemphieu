@*@model IEnumerable<v2kp.Models.PhieuBauViewModel>*@
@using PagedList.Mvc
@model PagedList.IPagedList<v2kp.Models.PhieuBauViewModel>


@{
    ViewBag.Title = "Danh Sách Phiếu Bầu";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>Danh sách phiếu bầu</h2>

    <!-- Search Form -->
    @using (Html.BeginForm("Index", "PhieuBaus", FormMethod.Get))
    {
        <div class="input-group mb-3">
            <input type="text" name="searchID" class="form-control" placeholder="Nhập mã phiếu bầu" value="@Request["searchID"]" />
            <input type="hidden" name="iddaihoi" value="@ViewBag.IDDaiHoi" />
            <input type="hidden" name="idkhuvuc" value="@ViewBag.IDKhuVuc" />
            <div class="input-group-append">
                <button type="submit" class="btn btn-primary ms-2">Tìm kiếm</button>
                <a href="@Url.Action("Index", "PhieuBaus", new { iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc })" class="btn btn-secondary">Reset</a>
                <a href="@Url.Action("Index", "Home", new { iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc })" class="btn btn-secondary ">
                    Quay lại
                </a>
            </div>
        </div>
    }



    <!-- Table -->
<table class="table ">
    <thead>
        <tr>
            <th style="width: 150px;">Mã phiếu bầu</th>
            <th>Tên ứng cử viên</th>
            <th style="width:80px;">Đồng ý</th> <!-- New column for Agree -->
            <th>Không đồng ý</th> <!-- New column for Disagree -->
            <th>Chức Năng</th>
        </tr>
    </thead>
    <tbody>
        @{
            /*int? previousID = null;*/ // Biến để lưu trữ ID phiếu trước đó
            int? previousID = ViewBag.PreviousID; // Lấy ID phiếu cuối cùng từ trang trước (nếu có)
            bool isFirstRow = true;

        }

        @foreach (var item in Model)
        {
            // Nếu mã phiếu khác mã phiếu trước đó thì hiển thị số "Phiếu" mới
            if (isFirstRow && item.ID == previousID)
            {
                isFirstRow = false; // Đánh dấu đã xử lý bản ghi đầu tiên
            }
            else if (item.ID != previousID)
            {
                <tr>
                    <td colspan="5">
                        <strong>Phiếu @item.ID</strong>
                    </td>
                </tr>
            }

            previousID = item.ID;
            isFirstRow = false;

            <!-- Hiển thị các thông tin phiếu -->
            <tr class="@(item.IsChecked ? "table-success" : "")">
                <td style="width:150px;">@item.ID</td>
                <td>@item.TenUngCuVien</td>

                <td >
                    @if (item.IsChecked)
                    {
                        <span>✔</span> <!-- Hiển thị dấu tích cho "Đồng ý" -->
                    }
                    else
                    {
                        <span></span> <!-- Chỗ trống cho "Không đồng ý" -->
                    }
                </td>

                <td>
                    @if (!item.IsChecked)
                    {
                        <span style="color: red !important;">✔</span> <!-- Hiển thị dấu tích cho "Không đồng ý" -->
                    }
                    else
                    {
                        <span></span> <!-- Chỗ trống cho "Đồng ý" -->
                    }
                </td>

                <td>
                    @Html.ActionLink(
                        "Sửa",
                        "Edit",
                        "PhieuBaus",
                        new { iddaihoi = item.IDDaiHoi, idkhuvuc = item.KhuVuc, idphieu = item.ID, iducv = item.IDUngCuVien },
                        new { @class = "btn btn-primary btn-sm me-2", @role = "button" })
                    @Html.ActionLink(
                        "Xóa",
                        "Delete",
                        "PhieuBaus",
                        new { iddaihoi = item.IDDaiHoi, idkhuvuc = item.KhuVuc, idphieu = item.ID, iducv = item.IDUngCuVien },
                        new { @class = "btn btn-danger btn-sm", @role = "button" })
                </td>
            </tr>
        }
    </tbody>




</table>


    <div class="d-flex justify-content-between  ">
        <div>
            <nav aria-label="Page navigation example">
                <ul class="pagination pagination-sm justify-content-center">
                    <!-- Nút Previous (Trước) -->
                    <li class="page-item @((Model.HasPreviousPage) ? "" : "disabled")">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">Previous</a>
                    </li>

                    <!-- Các số trang -->
                    @if (Model.PageCount <= 5)
                    {
                        <!-- Nếu tổng số trang ít hơn hoặc bằng 5, hiển thị tất cả -->
                        for (int i = 1; i <= Model.PageCount; i++)
                        {
                            <li class="page-item @((i == Model.PageNumber) ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">@i</a>
                            </li>
                        }
                    }
                    else
                    {
                        <!-- Nếu số trang nhiều hơn 5, hiển thị các trang đầu, trang cuối và dấu ba chấm -->
                        if (Model.PageNumber <= 3)
                        {
                            for (int i = 1; i <= 3; i++)
                            {
                                <li class="page-item @((i == Model.PageNumber) ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = i, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">@i</a>
                                </li>
                            }
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">@Model.PageCount</a>
                            </li>
                        }
                        else if (Model.PageNumber >= Model.PageCount - 2)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = 1, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">1</a>
                            </li>
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                            for (int i = Model.PageCount - 2; i <= Model.PageCount; i++)
                            {
                                <li class="page-item @((i == Model.PageNumber) ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = i, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">@i</a>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = 1, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">1</a>
                            </li>
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                            for (int i = Model.PageNumber - 2; i <= Model.PageNumber + 2; i++)
                            {
                                <li class="page-item @((i == Model.PageNumber) ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = i, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">@i</a>
                                </li>
                            }
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageCount, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">@Model.PageCount</a>
                            </li>
                        }
                    }

                    <!-- Nút Next (Sau) -->
                    <li class="page-item @((Model.HasNextPage) ? "" : "disabled")">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1, iddaihoi = ViewBag.IDDaiHoi, idkhuvuc = ViewBag.IDKhuVuc, searchID = Request["searchID"] })">Next</a>
                    </li>
                </ul>
            </nav>
        </div>








    </div>
</div>
<!-- Bootstrap Icons CDN -->
@*<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">*@

<style>
    /* Đảm bảo dấu ba chấm có cùng kích thước và kiểu dáng với các số trang */
    .page-dots {
        font-size: 1rem; /* Giữ kích thước giống như các số trang */
        font-weight: 400; /* Đảm bảo độ dày chữ tương tự */
        line-height: 1.5; /* Đảm bảo line-height phù hợp */
        padding: 0.375rem 0.75rem; /* Padding giống như các nút trang */
        display: inline-block; /* Giữ hiển thị giống như nút trang */
        background-color: #fff; /* Màu nền trắng giống nút trang */
        border: 1px solid #dee2e6; /* Biên giới như các nút trang */
        border-radius: 0.25rem; /* Viền tròn như các nút trang */
        color: #007bff; /* Màu chữ giống các nút trang */
    }

        .page-dots:hover {
            text-decoration: none; /* Không có gạch dưới khi hover */
            background-color: #f8f9fa; /* Nền sáng hơn khi hover */
            color: #0056b3; /* Màu chữ đậm hơn khi hover */
        }
    

            
</style>
